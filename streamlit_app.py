import streamlit as st
import pandas as pd

# Load the prediction results generated by the model
@st.cache_data
def load_prediction_results():
    return pd.read_csv('predicted_results.csv')

# Load the prediction results
predicted_results = load_prediction_results()

# Streamlit app layout
st.markdown("<h1>Bundesliga Match Predictions</h1>", unsafe_allow_html=True)

# Display predictions
if not predicted_results.empty:
    for _, match in predicted_results.iterrows():
        home_team = match['home_team']
        away_team = match['away_team']
        predicted_winner = match['predicted_winner']
        home_win_prob = round(match['home_win_prob'] * 100, 2)
        draw_prob = round(match['draw_prob'] * 100, 2)
        away_win_prob = round(match['away_win_prob'] * 100, 2)
        
        st.markdown(f"""
            <div style="padding: 20px; background-color: #283593; border-radius: 15px; margin-bottom: 20px;">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div style="text-align: center;">
                        <h3 style="color: #FAFAFA;">{home_team}</h3>
                    </div>
                    <div style="text-align: center;">
                        <h2 style="color: #F9A825;">VS</h2>
                    </div>
                    <div style="text-align: center;">
                        <h3 style="color: #FAFAFA;">{away_team}</h3>
                    </div>
                </div>
                <p style="color: #F9A825; text-align: center;">Prediction:</p>
                <ul style="list-style: none; color: #FAFAFA;">
                    <li><strong>{home_team} Win Probability:</strong> {home_win_prob}%</li>
                    <li><strong>Draw Probability:</strong> {draw_prob}%</li>
                    <li><strong>{away_team} Win Probability:</strong> {away_win_prob}%</li>
                </ul>
            </div>
        """, unsafe_allow_html=True)
else:
    st.write("No predictions available.")
